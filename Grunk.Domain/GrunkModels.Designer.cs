//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("GrunkedDatabaseModel", "FK_ProfileActivities_ActivityTypes", "ActivityType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grunk.Domain.ActivityType), "ProfileActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grunk.Domain.ProfileActivity), true)]
[assembly: EdmRelationshipAttribute("GrunkedDatabaseModel", "FK_Albums_Artists", "Artist", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grunk.Domain.Artist), "Album", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grunk.Domain.Album), true)]
[assembly: EdmRelationshipAttribute("GrunkedDatabaseModel", "FK_Albums_Genres", "Genre", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grunk.Domain.Genre), "Album", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grunk.Domain.Album), true)]
[assembly: EdmRelationshipAttribute("GrunkedDatabaseModel", "FK_Purchases_Albums", "Album", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grunk.Domain.Album), "Purchase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grunk.Domain.Purchase), true)]
[assembly: EdmRelationshipAttribute("GrunkedDatabaseModel", "FK_Profiles_Credentials", "Credential", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grunk.Domain.Credential), "Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grunk.Domain.Profile), true)]
[assembly: EdmRelationshipAttribute("GrunkedDatabaseModel", "FK_Grunks_Profiles", "Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grunk.Domain.Profile), "Grunker", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grunk.Domain.Grunker), true)]
[assembly: EdmRelationshipAttribute("GrunkedDatabaseModel", "FK_PictureLocations_Pictures", "Picture", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grunk.Domain.Picture), "PictureLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Grunk.Domain.PictureLocation), true)]
[assembly: EdmRelationshipAttribute("GrunkedDatabaseModel", "FK_ProfileActivities_Profiles", "Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grunk.Domain.Profile), "ProfileActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grunk.Domain.ProfileActivity), true)]
[assembly: EdmRelationshipAttribute("GrunkedDatabaseModel", "FK_Purchases_Profiles", "Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grunk.Domain.Profile), "Purchase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grunk.Domain.Purchase), true)]
[assembly: EdmRelationshipAttribute("GrunkedDatabaseModel", "FK_Reviews_Profiles", "Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grunk.Domain.Profile), "Review", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grunk.Domain.Review), true)]
[assembly: EdmRelationshipAttribute("GrunkedDatabaseModel", "FK_ReviewLink_Reviews", "Review", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grunk.Domain.Review), "ReviewLink", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Grunk.Domain.ReviewLink), true)]
[assembly: EdmRelationshipAttribute("GrunkedDatabaseModel", "AlbumPictures", "Album", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grunk.Domain.Album), "Picture", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grunk.Domain.Picture))]
[assembly: EdmRelationshipAttribute("GrunkedDatabaseModel", "ProfilePictures", "Picture", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grunk.Domain.Picture), "Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grunk.Domain.Profile))]
[assembly: EdmRelationshipAttribute("GrunkedDatabaseModel", "ReviewPictures", "Picture", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grunk.Domain.Picture), "Review", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grunk.Domain.Review))]

#endregion

namespace Grunk.Domain
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActivityType> ActivityTypes
        {
            get
            {
                if ((_ActivityTypes == null))
                {
                    _ActivityTypes = base.CreateObjectSet<ActivityType>("ActivityTypes");
                }
                return _ActivityTypes;
            }
        }
        private ObjectSet<ActivityType> _ActivityTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Album> Albums
        {
            get
            {
                if ((_Albums == null))
                {
                    _Albums = base.CreateObjectSet<Album>("Albums");
                }
                return _Albums;
            }
        }
        private ObjectSet<Album> _Albums;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Artist> Artists
        {
            get
            {
                if ((_Artists == null))
                {
                    _Artists = base.CreateObjectSet<Artist>("Artists");
                }
                return _Artists;
            }
        }
        private ObjectSet<Artist> _Artists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Credential> Credentials
        {
            get
            {
                if ((_Credentials == null))
                {
                    _Credentials = base.CreateObjectSet<Credential>("Credentials");
                }
                return _Credentials;
            }
        }
        private ObjectSet<Credential> _Credentials;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Genre> Genres
        {
            get
            {
                if ((_Genres == null))
                {
                    _Genres = base.CreateObjectSet<Genre>("Genres");
                }
                return _Genres;
            }
        }
        private ObjectSet<Genre> _Genres;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Grunker> Grunkers
        {
            get
            {
                if ((_Grunkers == null))
                {
                    _Grunkers = base.CreateObjectSet<Grunker>("Grunkers");
                }
                return _Grunkers;
            }
        }
        private ObjectSet<Grunker> _Grunkers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PictureLocation> PictureLocations
        {
            get
            {
                if ((_PictureLocations == null))
                {
                    _PictureLocations = base.CreateObjectSet<PictureLocation>("PictureLocations");
                }
                return _PictureLocations;
            }
        }
        private ObjectSet<PictureLocation> _PictureLocations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Picture> Pictures
        {
            get
            {
                if ((_Pictures == null))
                {
                    _Pictures = base.CreateObjectSet<Picture>("Pictures");
                }
                return _Pictures;
            }
        }
        private ObjectSet<Picture> _Pictures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProfileActivity> ProfileActivities
        {
            get
            {
                if ((_ProfileActivities == null))
                {
                    _ProfileActivities = base.CreateObjectSet<ProfileActivity>("ProfileActivities");
                }
                return _ProfileActivities;
            }
        }
        private ObjectSet<ProfileActivity> _ProfileActivities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Profile> Profiles
        {
            get
            {
                if ((_Profiles == null))
                {
                    _Profiles = base.CreateObjectSet<Profile>("Profiles");
                }
                return _Profiles;
            }
        }
        private ObjectSet<Profile> _Profiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Purchase> Purchases
        {
            get
            {
                if ((_Purchases == null))
                {
                    _Purchases = base.CreateObjectSet<Purchase>("Purchases");
                }
                return _Purchases;
            }
        }
        private ObjectSet<Purchase> _Purchases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReviewLink> ReviewLinks
        {
            get
            {
                if ((_ReviewLinks == null))
                {
                    _ReviewLinks = base.CreateObjectSet<ReviewLink>("ReviewLinks");
                }
                return _ReviewLinks;
            }
        }
        private ObjectSet<ReviewLink> _ReviewLinks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Review> Reviews
        {
            get
            {
                if ((_Reviews == null))
                {
                    _Reviews = base.CreateObjectSet<Review>("Reviews");
                }
                return _Reviews;
            }
        }
        private ObjectSet<Review> _Reviews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StaticText> StaticTexts
        {
            get
            {
                if ((_StaticTexts == null))
                {
                    _StaticTexts = base.CreateObjectSet<StaticText>("StaticTexts");
                }
                return _StaticTexts;
            }
        }
        private ObjectSet<StaticText> _StaticTexts;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActivityTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivityTypes(ActivityType activityType)
        {
            base.AddObject("ActivityTypes", activityType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Albums EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlbums(Album album)
        {
            base.AddObject("Albums", album);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Artists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToArtists(Artist artist)
        {
            base.AddObject("Artists", artist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Credentials EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCredentials(Credential credential)
        {
            base.AddObject("Credentials", credential);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Genres EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGenres(Genre genre)
        {
            base.AddObject("Genres", genre);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Grunkers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGrunkers(Grunker grunker)
        {
            base.AddObject("Grunkers", grunker);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PictureLocations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPictureLocations(PictureLocation pictureLocation)
        {
            base.AddObject("PictureLocations", pictureLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pictures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPictures(Picture picture)
        {
            base.AddObject("Pictures", picture);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProfileActivities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProfileActivities(ProfileActivity profileActivity)
        {
            base.AddObject("ProfileActivities", profileActivity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Profiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProfiles(Profile profile)
        {
            base.AddObject("Profiles", profile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Purchases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchases(Purchase purchase)
        {
            base.AddObject("Purchases", purchase);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReviewLinks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReviewLinks(ReviewLink reviewLink)
        {
            base.AddObject("ReviewLinks", reviewLink);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reviews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReviews(Review review)
        {
            base.AddObject("Reviews", review);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StaticTexts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStaticTexts(StaticText staticText)
        {
            base.AddObject("StaticTexts", staticText);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GrunkedDatabaseModel", Name="ActivityType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActivityType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActivityType object.
        /// </summary>
        /// <param name="activityTypeId">Initial value of the ActivityTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="prettyName">Initial value of the PrettyName property.</param>
        public static ActivityType CreateActivityType(global::System.Int32 activityTypeId, global::System.String name, global::System.String prettyName)
        {
            ActivityType activityType = new ActivityType();
            activityType.ActivityTypeId = activityTypeId;
            activityType.Name = name;
            activityType.PrettyName = prettyName;
            return activityType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivityTypeId
        {
            get
            {
                return _ActivityTypeId;
            }
            set
            {
                if (_ActivityTypeId != value)
                {
                    OnActivityTypeIdChanging(value);
                    ReportPropertyChanging("ActivityTypeId");
                    _ActivityTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActivityTypeId");
                    OnActivityTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ActivityTypeId;
        partial void OnActivityTypeIdChanging(global::System.Int32 value);
        partial void OnActivityTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PrettyName
        {
            get
            {
                return _PrettyName;
            }
            set
            {
                OnPrettyNameChanging(value);
                ReportPropertyChanging("PrettyName");
                _PrettyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PrettyName");
                OnPrettyNameChanged();
            }
        }
        private global::System.String _PrettyName;
        partial void OnPrettyNameChanging(global::System.String value);
        partial void OnPrettyNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "FK_ProfileActivities_ActivityTypes", "ProfileActivity")]
        public EntityCollection<ProfileActivity> ProfileActivities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProfileActivity>("GrunkedDatabaseModel.FK_ProfileActivities_ActivityTypes", "ProfileActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProfileActivity>("GrunkedDatabaseModel.FK_ProfileActivities_ActivityTypes", "ProfileActivity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GrunkedDatabaseModel", Name="Album")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Album : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Album object.
        /// </summary>
        /// <param name="albumId">Initial value of the AlbumId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="artistId">Initial value of the ArtistId property.</param>
        /// <param name="creationDateTime">Initial value of the CreationDateTime property.</param>
        /// <param name="genreId">Initial value of the GenreId property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static Album CreateAlbum(global::System.Int32 albumId, global::System.String name, global::System.Int32 artistId, global::System.DateTime creationDateTime, global::System.Int32 genreId, global::System.Int16 price)
        {
            Album album = new Album();
            album.AlbumId = albumId;
            album.Name = name;
            album.ArtistId = artistId;
            album.CreationDateTime = creationDateTime;
            album.GenreId = genreId;
            album.Price = price;
            return album;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlbumId
        {
            get
            {
                return _AlbumId;
            }
            set
            {
                if (_AlbumId != value)
                {
                    OnAlbumIdChanging(value);
                    ReportPropertyChanging("AlbumId");
                    _AlbumId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AlbumId");
                    OnAlbumIdChanged();
                }
            }
        }
        private global::System.Int32 _AlbumId;
        partial void OnAlbumIdChanging(global::System.Int32 value);
        partial void OnAlbumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ArtistId
        {
            get
            {
                return _ArtistId;
            }
            set
            {
                OnArtistIdChanging(value);
                ReportPropertyChanging("ArtistId");
                _ArtistId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArtistId");
                OnArtistIdChanged();
            }
        }
        private global::System.Int32 _ArtistId;
        partial void OnArtistIdChanging(global::System.Int32 value);
        partial void OnArtistIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDateTime
        {
            get
            {
                return _CreationDateTime;
            }
            set
            {
                OnCreationDateTimeChanging(value);
                ReportPropertyChanging("CreationDateTime");
                _CreationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDateTime");
                OnCreationDateTimeChanged();
            }
        }
        private global::System.DateTime _CreationDateTime;
        partial void OnCreationDateTimeChanging(global::System.DateTime value);
        partial void OnCreationDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenreId
        {
            get
            {
                return _GenreId;
            }
            set
            {
                OnGenreIdChanging(value);
                ReportPropertyChanging("GenreId");
                _GenreId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenreId");
                OnGenreIdChanged();
            }
        }
        private global::System.Int32 _GenreId;
        partial void OnGenreIdChanging(global::System.Int32 value);
        partial void OnGenreIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Int16 _Price;
        partial void OnPriceChanging(global::System.Int16 value);
        partial void OnPriceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "FK_Albums_Artists", "Artist")]
        public Artist Artist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("GrunkedDatabaseModel.FK_Albums_Artists", "Artist").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("GrunkedDatabaseModel.FK_Albums_Artists", "Artist").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Artist> ArtistReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("GrunkedDatabaseModel.FK_Albums_Artists", "Artist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Artist>("GrunkedDatabaseModel.FK_Albums_Artists", "Artist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "FK_Albums_Genres", "Genre")]
        public Genre Genre
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("GrunkedDatabaseModel.FK_Albums_Genres", "Genre").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("GrunkedDatabaseModel.FK_Albums_Genres", "Genre").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Genre> GenreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("GrunkedDatabaseModel.FK_Albums_Genres", "Genre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Genre>("GrunkedDatabaseModel.FK_Albums_Genres", "Genre", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "FK_Purchases_Albums", "Purchase")]
        public EntityCollection<Purchase> Purchases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Purchase>("GrunkedDatabaseModel.FK_Purchases_Albums", "Purchase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Purchase>("GrunkedDatabaseModel.FK_Purchases_Albums", "Purchase", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "AlbumPictures", "Picture")]
        public EntityCollection<Picture> Pictures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Picture>("GrunkedDatabaseModel.AlbumPictures", "Picture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Picture>("GrunkedDatabaseModel.AlbumPictures", "Picture", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GrunkedDatabaseModel", Name="Artist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Artist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Artist object.
        /// </summary>
        /// <param name="artistId">Initial value of the ArtistId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Artist CreateArtist(global::System.Int32 artistId, global::System.String name)
        {
            Artist artist = new Artist();
            artist.ArtistId = artistId;
            artist.Name = name;
            return artist;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ArtistId
        {
            get
            {
                return _ArtistId;
            }
            set
            {
                if (_ArtistId != value)
                {
                    OnArtistIdChanging(value);
                    ReportPropertyChanging("ArtistId");
                    _ArtistId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ArtistId");
                    OnArtistIdChanged();
                }
            }
        }
        private global::System.Int32 _ArtistId;
        partial void OnArtistIdChanging(global::System.Int32 value);
        partial void OnArtistIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "FK_Albums_Artists", "Album")]
        public EntityCollection<Album> Albums
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Album>("GrunkedDatabaseModel.FK_Albums_Artists", "Album");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Album>("GrunkedDatabaseModel.FK_Albums_Artists", "Album", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GrunkedDatabaseModel", Name="Credential")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Credential : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Credential object.
        /// </summary>
        /// <param name="credentialsId">Initial value of the CredentialsId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="isSystemUser">Initial value of the IsSystemUser property.</param>
        public static Credential CreateCredential(global::System.Int32 credentialsId, global::System.String userName, global::System.String password, global::System.Boolean isSystemUser)
        {
            Credential credential = new Credential();
            credential.CredentialsId = credentialsId;
            credential.UserName = userName;
            credential.Password = password;
            credential.IsSystemUser = isSystemUser;
            return credential;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CredentialsId
        {
            get
            {
                return _CredentialsId;
            }
            set
            {
                if (_CredentialsId != value)
                {
                    OnCredentialsIdChanging(value);
                    ReportPropertyChanging("CredentialsId");
                    _CredentialsId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CredentialsId");
                    OnCredentialsIdChanged();
                }
            }
        }
        private global::System.Int32 _CredentialsId;
        partial void OnCredentialsIdChanging(global::System.Int32 value);
        partial void OnCredentialsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSystemUser
        {
            get
            {
                return _IsSystemUser;
            }
            set
            {
                OnIsSystemUserChanging(value);
                ReportPropertyChanging("IsSystemUser");
                _IsSystemUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSystemUser");
                OnIsSystemUserChanged();
            }
        }
        private global::System.Boolean _IsSystemUser;
        partial void OnIsSystemUserChanging(global::System.Boolean value);
        partial void OnIsSystemUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "FK_Profiles_Credentials", "Profile")]
        public EntityCollection<Profile> Profiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Profile>("GrunkedDatabaseModel.FK_Profiles_Credentials", "Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Profile>("GrunkedDatabaseModel.FK_Profiles_Credentials", "Profile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GrunkedDatabaseModel", Name="Genre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Genre : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Genre object.
        /// </summary>
        /// <param name="genreId">Initial value of the GenreId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Genre CreateGenre(global::System.Int32 genreId, global::System.String name)
        {
            Genre genre = new Genre();
            genre.GenreId = genreId;
            genre.Name = name;
            return genre;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenreId
        {
            get
            {
                return _GenreId;
            }
            set
            {
                if (_GenreId != value)
                {
                    OnGenreIdChanging(value);
                    ReportPropertyChanging("GenreId");
                    _GenreId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GenreId");
                    OnGenreIdChanged();
                }
            }
        }
        private global::System.Int32 _GenreId;
        partial void OnGenreIdChanging(global::System.Int32 value);
        partial void OnGenreIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "FK_Albums_Genres", "Album")]
        public EntityCollection<Album> Albums
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Album>("GrunkedDatabaseModel.FK_Albums_Genres", "Album");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Album>("GrunkedDatabaseModel.FK_Albums_Genres", "Album", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GrunkedDatabaseModel", Name="Grunker")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Grunker : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Grunker object.
        /// </summary>
        /// <param name="profileId">Initial value of the ProfileId property.</param>
        /// <param name="grunkId">Initial value of the GrunkId property.</param>
        /// <param name="sum">Initial value of the Sum property.</param>
        public static Grunker CreateGrunker(global::System.Int32 profileId, global::System.Int32 grunkId, global::System.Int32 sum)
        {
            Grunker grunker = new Grunker();
            grunker.ProfileId = profileId;
            grunker.GrunkId = grunkId;
            grunker.Sum = sum;
            return grunker;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfileId
        {
            get
            {
                return _ProfileId;
            }
            set
            {
                OnProfileIdChanging(value);
                ReportPropertyChanging("ProfileId");
                _ProfileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileId");
                OnProfileIdChanged();
            }
        }
        private global::System.Int32 _ProfileId;
        partial void OnProfileIdChanging(global::System.Int32 value);
        partial void OnProfileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GrunkId
        {
            get
            {
                return _GrunkId;
            }
            set
            {
                if (_GrunkId != value)
                {
                    OnGrunkIdChanging(value);
                    ReportPropertyChanging("GrunkId");
                    _GrunkId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GrunkId");
                    OnGrunkIdChanged();
                }
            }
        }
        private global::System.Int32 _GrunkId;
        partial void OnGrunkIdChanging(global::System.Int32 value);
        partial void OnGrunkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sum
        {
            get
            {
                return _Sum;
            }
            set
            {
                OnSumChanging(value);
                ReportPropertyChanging("Sum");
                _Sum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sum");
                OnSumChanged();
            }
        }
        private global::System.Int32 _Sum;
        partial void OnSumChanging(global::System.Int32 value);
        partial void OnSumChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "FK_Grunks_Profiles", "Profile")]
        public Profile Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("GrunkedDatabaseModel.FK_Grunks_Profiles", "Profile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("GrunkedDatabaseModel.FK_Grunks_Profiles", "Profile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Profile> ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("GrunkedDatabaseModel.FK_Grunks_Profiles", "Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Profile>("GrunkedDatabaseModel.FK_Grunks_Profiles", "Profile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GrunkedDatabaseModel", Name="Picture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Picture : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Picture object.
        /// </summary>
        /// <param name="pictureId">Initial value of the PictureId property.</param>
        /// <param name="width">Initial value of the Width property.</param>
        /// <param name="height">Initial value of the Height property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        /// <param name="uploadedDateTime">Initial value of the UploadedDateTime property.</param>
        public static Picture CreatePicture(global::System.Int32 pictureId, global::System.Int32 width, global::System.Int32 height, global::System.String fileName, global::System.String path, global::System.DateTime uploadedDateTime)
        {
            Picture picture = new Picture();
            picture.PictureId = pictureId;
            picture.Width = width;
            picture.Height = height;
            picture.FileName = fileName;
            picture.Path = path;
            picture.UploadedDateTime = uploadedDateTime;
            return picture;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PictureId
        {
            get
            {
                return _PictureId;
            }
            set
            {
                if (_PictureId != value)
                {
                    OnPictureIdChanging(value);
                    ReportPropertyChanging("PictureId");
                    _PictureId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PictureId");
                    OnPictureIdChanged();
                }
            }
        }
        private global::System.Int32 _PictureId;
        partial void OnPictureIdChanging(global::System.Int32 value);
        partial void OnPictureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private global::System.Int32 _Width;
        partial void OnWidthChanging(global::System.Int32 value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private global::System.Int32 _Height;
        partial void OnHeightChanging(global::System.Int32 value);
        partial void OnHeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UploadedDateTime
        {
            get
            {
                return _UploadedDateTime;
            }
            set
            {
                OnUploadedDateTimeChanging(value);
                ReportPropertyChanging("UploadedDateTime");
                _UploadedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploadedDateTime");
                OnUploadedDateTimeChanged();
            }
        }
        private global::System.DateTime _UploadedDateTime;
        partial void OnUploadedDateTimeChanging(global::System.DateTime value);
        partial void OnUploadedDateTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "FK_PictureLocations_Pictures", "PictureLocation")]
        public PictureLocation PictureLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PictureLocation>("GrunkedDatabaseModel.FK_PictureLocations_Pictures", "PictureLocation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PictureLocation>("GrunkedDatabaseModel.FK_PictureLocations_Pictures", "PictureLocation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PictureLocation> PictureLocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PictureLocation>("GrunkedDatabaseModel.FK_PictureLocations_Pictures", "PictureLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PictureLocation>("GrunkedDatabaseModel.FK_PictureLocations_Pictures", "PictureLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "AlbumPictures", "Album")]
        public EntityCollection<Album> Albums
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Album>("GrunkedDatabaseModel.AlbumPictures", "Album");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Album>("GrunkedDatabaseModel.AlbumPictures", "Album", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "ProfilePictures", "Profile")]
        public EntityCollection<Profile> Profiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Profile>("GrunkedDatabaseModel.ProfilePictures", "Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Profile>("GrunkedDatabaseModel.ProfilePictures", "Profile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "ReviewPictures", "Review")]
        public EntityCollection<Review> Reviews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Review>("GrunkedDatabaseModel.ReviewPictures", "Review");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Review>("GrunkedDatabaseModel.ReviewPictures", "Review", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GrunkedDatabaseModel", Name="PictureLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PictureLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PictureLocation object.
        /// </summary>
        /// <param name="pictureId">Initial value of the PictureId property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        public static PictureLocation CreatePictureLocation(global::System.Int32 pictureId, global::System.String fileName, global::System.String path)
        {
            PictureLocation pictureLocation = new PictureLocation();
            pictureLocation.PictureId = pictureId;
            pictureLocation.FileName = fileName;
            pictureLocation.Path = path;
            return pictureLocation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PictureId
        {
            get
            {
                return _PictureId;
            }
            set
            {
                if (_PictureId != value)
                {
                    OnPictureIdChanging(value);
                    ReportPropertyChanging("PictureId");
                    _PictureId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PictureId");
                    OnPictureIdChanged();
                }
            }
        }
        private global::System.Int32 _PictureId;
        partial void OnPictureIdChanging(global::System.Int32 value);
        partial void OnPictureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "FK_PictureLocations_Pictures", "Picture")]
        public Picture Picture
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Picture>("GrunkedDatabaseModel.FK_PictureLocations_Pictures", "Picture").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Picture>("GrunkedDatabaseModel.FK_PictureLocations_Pictures", "Picture").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Picture> PictureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Picture>("GrunkedDatabaseModel.FK_PictureLocations_Pictures", "Picture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Picture>("GrunkedDatabaseModel.FK_PictureLocations_Pictures", "Picture", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GrunkedDatabaseModel", Name="Profile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Profile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Profile object.
        /// </summary>
        /// <param name="profileId">Initial value of the ProfileId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="credentialsId">Initial value of the CredentialsId property.</param>
        public static Profile CreateProfile(global::System.Int32 profileId, global::System.String description, global::System.Int32 credentialsId)
        {
            Profile profile = new Profile();
            profile.ProfileId = profileId;
            profile.Description = description;
            profile.CredentialsId = credentialsId;
            return profile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfileId
        {
            get
            {
                return _ProfileId;
            }
            set
            {
                if (_ProfileId != value)
                {
                    OnProfileIdChanging(value);
                    ReportPropertyChanging("ProfileId");
                    _ProfileId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProfileId");
                    OnProfileIdChanged();
                }
            }
        }
        private global::System.Int32 _ProfileId;
        partial void OnProfileIdChanging(global::System.Int32 value);
        partial void OnProfileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CredentialsId
        {
            get
            {
                return _CredentialsId;
            }
            set
            {
                OnCredentialsIdChanging(value);
                ReportPropertyChanging("CredentialsId");
                _CredentialsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CredentialsId");
                OnCredentialsIdChanged();
            }
        }
        private global::System.Int32 _CredentialsId;
        partial void OnCredentialsIdChanging(global::System.Int32 value);
        partial void OnCredentialsIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "FK_Profiles_Credentials", "Credential")]
        public Credential Credential
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Credential>("GrunkedDatabaseModel.FK_Profiles_Credentials", "Credential").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Credential>("GrunkedDatabaseModel.FK_Profiles_Credentials", "Credential").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Credential> CredentialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Credential>("GrunkedDatabaseModel.FK_Profiles_Credentials", "Credential");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Credential>("GrunkedDatabaseModel.FK_Profiles_Credentials", "Credential", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "FK_Grunks_Profiles", "Grunker")]
        public EntityCollection<Grunker> Grunkers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Grunker>("GrunkedDatabaseModel.FK_Grunks_Profiles", "Grunker");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Grunker>("GrunkedDatabaseModel.FK_Grunks_Profiles", "Grunker", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "FK_ProfileActivities_Profiles", "ProfileActivity")]
        public EntityCollection<ProfileActivity> ProfileActivities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProfileActivity>("GrunkedDatabaseModel.FK_ProfileActivities_Profiles", "ProfileActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProfileActivity>("GrunkedDatabaseModel.FK_ProfileActivities_Profiles", "ProfileActivity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "FK_Purchases_Profiles", "Purchase")]
        public EntityCollection<Purchase> Purchases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Purchase>("GrunkedDatabaseModel.FK_Purchases_Profiles", "Purchase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Purchase>("GrunkedDatabaseModel.FK_Purchases_Profiles", "Purchase", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "FK_Reviews_Profiles", "Review")]
        public EntityCollection<Review> Reviews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Review>("GrunkedDatabaseModel.FK_Reviews_Profiles", "Review");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Review>("GrunkedDatabaseModel.FK_Reviews_Profiles", "Review", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "ProfilePictures", "Picture")]
        public EntityCollection<Picture> Pictures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Picture>("GrunkedDatabaseModel.ProfilePictures", "Picture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Picture>("GrunkedDatabaseModel.ProfilePictures", "Picture", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GrunkedDatabaseModel", Name="ProfileActivity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProfileActivity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProfileActivity object.
        /// </summary>
        /// <param name="activityId">Initial value of the ActivityId property.</param>
        /// <param name="profileId">Initial value of the ProfileId property.</param>
        /// <param name="activityTypeId">Initial value of the ActivityTypeId property.</param>
        /// <param name="creationDateTime">Initial value of the CreationDateTime property.</param>
        public static ProfileActivity CreateProfileActivity(global::System.Int32 activityId, global::System.Int32 profileId, global::System.Int32 activityTypeId, global::System.DateTime creationDateTime)
        {
            ProfileActivity profileActivity = new ProfileActivity();
            profileActivity.ActivityId = activityId;
            profileActivity.ProfileId = profileId;
            profileActivity.ActivityTypeId = activityTypeId;
            profileActivity.CreationDateTime = creationDateTime;
            return profileActivity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivityId
        {
            get
            {
                return _ActivityId;
            }
            set
            {
                if (_ActivityId != value)
                {
                    OnActivityIdChanging(value);
                    ReportPropertyChanging("ActivityId");
                    _ActivityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActivityId");
                    OnActivityIdChanged();
                }
            }
        }
        private global::System.Int32 _ActivityId;
        partial void OnActivityIdChanging(global::System.Int32 value);
        partial void OnActivityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfileId
        {
            get
            {
                return _ProfileId;
            }
            set
            {
                OnProfileIdChanging(value);
                ReportPropertyChanging("ProfileId");
                _ProfileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileId");
                OnProfileIdChanged();
            }
        }
        private global::System.Int32 _ProfileId;
        partial void OnProfileIdChanging(global::System.Int32 value);
        partial void OnProfileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivityTypeId
        {
            get
            {
                return _ActivityTypeId;
            }
            set
            {
                OnActivityTypeIdChanging(value);
                ReportPropertyChanging("ActivityTypeId");
                _ActivityTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivityTypeId");
                OnActivityTypeIdChanged();
            }
        }
        private global::System.Int32 _ActivityTypeId;
        partial void OnActivityTypeIdChanging(global::System.Int32 value);
        partial void OnActivityTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDateTime
        {
            get
            {
                return _CreationDateTime;
            }
            set
            {
                OnCreationDateTimeChanging(value);
                ReportPropertyChanging("CreationDateTime");
                _CreationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDateTime");
                OnCreationDateTimeChanged();
            }
        }
        private global::System.DateTime _CreationDateTime;
        partial void OnCreationDateTimeChanging(global::System.DateTime value);
        partial void OnCreationDateTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "FK_ProfileActivities_ActivityTypes", "ActivityType")]
        public ActivityType ActivityType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActivityType>("GrunkedDatabaseModel.FK_ProfileActivities_ActivityTypes", "ActivityType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActivityType>("GrunkedDatabaseModel.FK_ProfileActivities_ActivityTypes", "ActivityType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActivityType> ActivityTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActivityType>("GrunkedDatabaseModel.FK_ProfileActivities_ActivityTypes", "ActivityType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActivityType>("GrunkedDatabaseModel.FK_ProfileActivities_ActivityTypes", "ActivityType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "FK_ProfileActivities_Profiles", "Profile")]
        public Profile Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("GrunkedDatabaseModel.FK_ProfileActivities_Profiles", "Profile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("GrunkedDatabaseModel.FK_ProfileActivities_Profiles", "Profile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Profile> ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("GrunkedDatabaseModel.FK_ProfileActivities_Profiles", "Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Profile>("GrunkedDatabaseModel.FK_ProfileActivities_Profiles", "Profile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GrunkedDatabaseModel", Name="Purchase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Purchase : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Purchase object.
        /// </summary>
        /// <param name="profileId">Initial value of the ProfileId property.</param>
        /// <param name="albumId">Initial value of the AlbumId property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="purchasedDateTime">Initial value of the PurchasedDateTime property.</param>
        public static Purchase CreatePurchase(global::System.Int32 profileId, global::System.Int32 albumId, global::System.Int16 price, global::System.DateTime purchasedDateTime)
        {
            Purchase purchase = new Purchase();
            purchase.ProfileId = profileId;
            purchase.AlbumId = albumId;
            purchase.Price = price;
            purchase.PurchasedDateTime = purchasedDateTime;
            return purchase;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfileId
        {
            get
            {
                return _ProfileId;
            }
            set
            {
                if (_ProfileId != value)
                {
                    OnProfileIdChanging(value);
                    ReportPropertyChanging("ProfileId");
                    _ProfileId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProfileId");
                    OnProfileIdChanged();
                }
            }
        }
        private global::System.Int32 _ProfileId;
        partial void OnProfileIdChanging(global::System.Int32 value);
        partial void OnProfileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlbumId
        {
            get
            {
                return _AlbumId;
            }
            set
            {
                if (_AlbumId != value)
                {
                    OnAlbumIdChanging(value);
                    ReportPropertyChanging("AlbumId");
                    _AlbumId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AlbumId");
                    OnAlbumIdChanged();
                }
            }
        }
        private global::System.Int32 _AlbumId;
        partial void OnAlbumIdChanging(global::System.Int32 value);
        partial void OnAlbumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Int16 _Price;
        partial void OnPriceChanging(global::System.Int16 value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PurchasedDateTime
        {
            get
            {
                return _PurchasedDateTime;
            }
            set
            {
                OnPurchasedDateTimeChanging(value);
                ReportPropertyChanging("PurchasedDateTime");
                _PurchasedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchasedDateTime");
                OnPurchasedDateTimeChanged();
            }
        }
        private global::System.DateTime _PurchasedDateTime;
        partial void OnPurchasedDateTimeChanging(global::System.DateTime value);
        partial void OnPurchasedDateTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "FK_Purchases_Albums", "Album")]
        public Album Album
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("GrunkedDatabaseModel.FK_Purchases_Albums", "Album").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("GrunkedDatabaseModel.FK_Purchases_Albums", "Album").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Album> AlbumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("GrunkedDatabaseModel.FK_Purchases_Albums", "Album");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Album>("GrunkedDatabaseModel.FK_Purchases_Albums", "Album", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "FK_Purchases_Profiles", "Profile")]
        public Profile Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("GrunkedDatabaseModel.FK_Purchases_Profiles", "Profile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("GrunkedDatabaseModel.FK_Purchases_Profiles", "Profile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Profile> ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("GrunkedDatabaseModel.FK_Purchases_Profiles", "Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Profile>("GrunkedDatabaseModel.FK_Purchases_Profiles", "Profile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GrunkedDatabaseModel", Name="Review")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Review : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Review object.
        /// </summary>
        /// <param name="reviewId">Initial value of the ReviewId property.</param>
        /// <param name="creationDateTime">Initial value of the CreationDateTime property.</param>
        /// <param name="profileId">Initial value of the ProfileId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static Review CreateReview(global::System.Int32 reviewId, global::System.DateTime creationDateTime, global::System.Int32 profileId, global::System.String description, global::System.Int16 state, global::System.String title)
        {
            Review review = new Review();
            review.ReviewId = reviewId;
            review.CreationDateTime = creationDateTime;
            review.ProfileId = profileId;
            review.Description = description;
            review.State = state;
            review.Title = title;
            return review;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReviewId
        {
            get
            {
                return _ReviewId;
            }
            set
            {
                if (_ReviewId != value)
                {
                    OnReviewIdChanging(value);
                    ReportPropertyChanging("ReviewId");
                    _ReviewId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReviewId");
                    OnReviewIdChanged();
                }
            }
        }
        private global::System.Int32 _ReviewId;
        partial void OnReviewIdChanging(global::System.Int32 value);
        partial void OnReviewIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDateTime
        {
            get
            {
                return _CreationDateTime;
            }
            set
            {
                OnCreationDateTimeChanging(value);
                ReportPropertyChanging("CreationDateTime");
                _CreationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDateTime");
                OnCreationDateTimeChanged();
            }
        }
        private global::System.DateTime _CreationDateTime;
        partial void OnCreationDateTimeChanging(global::System.DateTime value);
        partial void OnCreationDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfileId
        {
            get
            {
                return _ProfileId;
            }
            set
            {
                OnProfileIdChanging(value);
                ReportPropertyChanging("ProfileId");
                _ProfileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileId");
                OnProfileIdChanged();
            }
        }
        private global::System.Int32 _ProfileId;
        partial void OnProfileIdChanging(global::System.Int32 value);
        partial void OnProfileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.Int16 _State;
        partial void OnStateChanging(global::System.Int16 value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "FK_Reviews_Profiles", "Profile")]
        public Profile Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("GrunkedDatabaseModel.FK_Reviews_Profiles", "Profile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("GrunkedDatabaseModel.FK_Reviews_Profiles", "Profile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Profile> ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("GrunkedDatabaseModel.FK_Reviews_Profiles", "Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Profile>("GrunkedDatabaseModel.FK_Reviews_Profiles", "Profile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "FK_ReviewLink_Reviews", "ReviewLink")]
        public ReviewLink ReviewLink
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReviewLink>("GrunkedDatabaseModel.FK_ReviewLink_Reviews", "ReviewLink").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReviewLink>("GrunkedDatabaseModel.FK_ReviewLink_Reviews", "ReviewLink").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReviewLink> ReviewLinkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReviewLink>("GrunkedDatabaseModel.FK_ReviewLink_Reviews", "ReviewLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReviewLink>("GrunkedDatabaseModel.FK_ReviewLink_Reviews", "ReviewLink", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "ReviewPictures", "Picture")]
        public EntityCollection<Picture> Pictures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Picture>("GrunkedDatabaseModel.ReviewPictures", "Picture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Picture>("GrunkedDatabaseModel.ReviewPictures", "Picture", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GrunkedDatabaseModel", Name="ReviewLink")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReviewLink : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReviewLink object.
        /// </summary>
        /// <param name="reviewId">Initial value of the ReviewId property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        public static ReviewLink CreateReviewLink(global::System.Int32 reviewId, global::System.String url)
        {
            ReviewLink reviewLink = new ReviewLink();
            reviewLink.ReviewId = reviewId;
            reviewLink.Url = url;
            return reviewLink;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReviewId
        {
            get
            {
                return _ReviewId;
            }
            set
            {
                if (_ReviewId != value)
                {
                    OnReviewIdChanging(value);
                    ReportPropertyChanging("ReviewId");
                    _ReviewId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReviewId");
                    OnReviewIdChanged();
                }
            }
        }
        private global::System.Int32 _ReviewId;
        partial void OnReviewIdChanging(global::System.Int32 value);
        partial void OnReviewIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GrunkedDatabaseModel", "FK_ReviewLink_Reviews", "Review")]
        public Review Review
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Review>("GrunkedDatabaseModel.FK_ReviewLink_Reviews", "Review").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Review>("GrunkedDatabaseModel.FK_ReviewLink_Reviews", "Review").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Review> ReviewReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Review>("GrunkedDatabaseModel.FK_ReviewLink_Reviews", "Review");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Review>("GrunkedDatabaseModel.FK_ReviewLink_Reviews", "Review", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GrunkedDatabaseModel", Name="StaticText")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StaticText : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StaticText object.
        /// </summary>
        /// <param name="header">Initial value of the Header property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="position">Initial value of the Position property.</param>
        public static StaticText CreateStaticText(global::System.String header, global::System.String text, global::System.String position)
        {
            StaticText staticText = new StaticText();
            staticText.Header = header;
            staticText.Text = text;
            staticText.Position = position;
            return staticText;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Header
        {
            get
            {
                return _Header;
            }
            set
            {
                OnHeaderChanging(value);
                ReportPropertyChanging("Header");
                _Header = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Header");
                OnHeaderChanged();
            }
        }
        private global::System.String _Header;
        partial void OnHeaderChanging(global::System.String value);
        partial void OnHeaderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                if (_Position != value)
                {
                    OnPositionChanging(value);
                    ReportPropertyChanging("Position");
                    _Position = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Position");
                    OnPositionChanged();
                }
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();

        #endregion
    
    }

    #endregion
    
}
